{"ast":null,"code":"var _jsxFileName = \"/Users/mik04rm/Desktop/kody/flappy/src/components/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Vec2 } from '../utility';\nimport Grid from './Grid'; // type Action = {\n//     type: string;\n// };\n// const reducer = (state: Vec2, action: Action) => {\n//     switch (action.type) {\n//     }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninterface;\n\nconst Game = () => {\n  _s();\n\n  const initialObstacles = [new Obstacle(6, 3, false), new Obstacle(8, 4, true)];\n  const [position, setPosition] = useState(new Vec2(3, 3));\n  const [obstacles, setObstacles] = useState([]); // const [position, dispatch] = useReducer(reducer, new Vec2(3, 3));\n\n  const moveHandler = event => {\n    if (event.key == 'ArrowUp') {\n      setPosition(new Vec2(position.row - 1, position.col));\n    }\n\n    if (event.key == 'ArrowDown') {\n      setPosition(new Vec2(position.row + 1, position.col));\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', moveHandler);\n    return () => document.removeEventListener('keydown', moveHandler);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    position: position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Game, \"L6TQe94vpqQJOrWzvVPKqnEE6MU=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/mik04rm/Desktop/kody/flappy/src/components/Game.tsx"],"names":["React","useEffect","useState","Vec2","Grid","interface","Game","initialObstacles","Obstacle","position","setPosition","obstacles","setObstacles","moveHandler","event","key","row","col","document","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAC,SAAS;;AAET,MAAMC,IAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,gBAA4B,GAAG,CACjC,IAAIC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB,CADiC,EAEjC,IAAIA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,IAAnB,CAFiC,CAArC;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAO,IAAIC,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAP,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAkB,EAAlB,CAA1C,CANyB,CAOzB;;AACA,QAAMW,WAAW,GAAIC,KAAD,IAA0B;AAC1C,QAAIA,KAAK,CAACC,GAAN,IAAa,SAAjB,EAA4B;AACxBL,MAAAA,WAAW,CAAC,IAAIP,IAAJ,CAASM,QAAQ,CAACO,GAAT,GAAe,CAAxB,EAA2BP,QAAQ,CAACQ,GAApC,CAAD,CAAX;AACH;;AACD,QAAIH,KAAK,CAACC,GAAN,IAAa,WAAjB,EAA8B;AAC1BL,MAAAA,WAAW,CAAC,IAAIP,IAAJ,CAASM,QAAQ,CAACO,GAAT,GAAe,CAAxB,EAA2BP,QAAQ,CAACQ,GAApC,CAAD,CAAX;AACH;AACJ,GAPD;;AAQAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCN,WAArC;AACA,WAAO,MAAMK,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCP,WAAxC,CAAb;AACH,GAHQ,CAAT;AAIA,sBAAO,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArBD;;GAAMH,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\nimport {Vec2} from '../utility';\nimport Grid from './Grid';\n\n// type Action = {\n//     type: string;\n// };\n\n// const reducer = (state: Vec2, action: Action) => {\n//     switch (action.type) {\n//     }\n// };\n\ninterface;\n\nconst Game: React.FC = () => {\n    const initialObstacles: Obstacle[] = [\n        new Obstacle(6, 3, false),\n        new Obstacle(8, 4, true)\n    ];\n    const [position, setPosition] = useState<Vec2>(new Vec2(3, 3));\n    const [obstacles, setObstacles] = useState<Array<Obstacle>>([]);\n    // const [position, dispatch] = useReducer(reducer, new Vec2(3, 3));\n    const moveHandler = (event: KeyboardEvent) => {\n        if (event.key == 'ArrowUp') {\n            setPosition(new Vec2(position.row - 1, position.col));\n        }\n        if (event.key == 'ArrowDown') {\n            setPosition(new Vec2(position.row + 1, position.col));\n        }\n    };\n    useEffect(() => {\n        document.addEventListener('keydown', moveHandler);\n        return () => document.removeEventListener('keydown', moveHandler);\n    });\n    return <Grid position={position} />;\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}