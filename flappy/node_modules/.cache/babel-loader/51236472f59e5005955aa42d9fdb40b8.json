{"ast":null,"code":"var _jsxFileName = \"/Users/mik04rm/kody/flappy/src/components/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Vec2 } from '../utility';\nimport Grid from './Grid'; // type Action = {\n//     type: string;\n// };\n// const reducer = (state: Vec2, action: Action) => {\n//     switch (action.type) {\n//     }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const initialObstacles = [{\n    col: 6,\n    height: 3,\n    side: 'bottom'\n  }, {\n    col: 8,\n    height: 4,\n    side: 'top'\n  }, {\n    col: 8,\n    height: 2,\n    side: 'bottom'\n  }];\n  const [position, setPosition] = useState(new Vec2(3, 3));\n  const [obstacles, setObstacles] = useState(initialObstacles); // const [position, dispatch] = useReducer(reducer, new Vec2(3, 3));\n\n  const moveHandler = event => {\n    console.log('position');\n\n    if (event.key == 'ArrowUp') {\n      setPosition(new Vec2(position.row - 1, position.col));\n    } else if (event.key == 'ArrowDown') {\n      setPosition(new Vec2(position.row + 1, position.col));\n    }\n\n    console.log('obstacles');\n\n    if (event.key == 'ArrowUp' || event.key == 'ArrowDown') {\n      setObstacles(obstacles.map(obstacle => {\n        obstacle.col -= 1;\n        return obstacle;\n      }));\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', moveHandler);\n    return () => document.removeEventListener('keydown', moveHandler);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    position: position,\n    obstacles: obstacles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Game, \"6vQFj+/p9kWhKxkfgCwgl+Ae9F4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/mik04rm/kody/flappy/src/components/Game.tsx"],"names":["React","useEffect","useState","Vec2","Grid","Game","initialObstacles","col","height","side","position","setPosition","obstacles","setObstacles","moveHandler","event","console","log","key","row","map","obstacle","document","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAkBC,IAAlB,QAA6B,YAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,gBAA4B,GAAG,CACjC;AAACC,IAAAA,GAAG,EAAE,CAAN;AAASC,IAAAA,MAAM,EAAE,CAAjB;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GADiC,EAEjC;AAACF,IAAAA,GAAG,EAAE,CAAN;AAASC,IAAAA,MAAM,EAAE,CAAjB;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAFiC,EAGjC;AAACF,IAAAA,GAAG,EAAE,CAAN;AAASC,IAAAA,MAAM,EAAE,CAAjB;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAHiC,CAArC;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAO,IAAIC,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAP,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAaI,gBAAb,CAA1C,CAPyB,CAQzB;;AACA,QAAMQ,WAAW,GAAIC,KAAD,IAA0B;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIF,KAAK,CAACG,GAAN,IAAa,SAAjB,EAA4B;AACxBP,MAAAA,WAAW,CAAC,IAAIR,IAAJ,CAASO,QAAQ,CAACS,GAAT,GAAe,CAAxB,EAA2BT,QAAQ,CAACH,GAApC,CAAD,CAAX;AACH,KAFD,MAEO,IAAIQ,KAAK,CAACG,GAAN,IAAa,WAAjB,EAA8B;AACjCP,MAAAA,WAAW,CAAC,IAAIR,IAAJ,CAASO,QAAQ,CAACS,GAAT,GAAe,CAAxB,EAA2BT,QAAQ,CAACH,GAApC,CAAD,CAAX;AACH;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,QAAIF,KAAK,CAACG,GAAN,IAAa,SAAb,IAA0BH,KAAK,CAACG,GAAN,IAAa,WAA3C,EAAwD;AACpDL,MAAAA,YAAY,CACRD,SAAS,CAACQ,GAAV,CAAeC,QAAD,IAAc;AACxBA,QAAAA,QAAQ,CAACd,GAAT,IAAgB,CAAhB;AACA,eAAOc,QAAP;AACH,OAHD,CADQ,CAAZ;AAMH;AACJ,GAhBD;;AAiBApB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCT,WAArC;AACA,WAAO,MAAMQ,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCV,WAAxC,CAAb;AACH,GAHQ,CAAT;AAIA,sBAAO,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,QAAhB;AAA0B,IAAA,SAAS,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA/BD;;GAAMP,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\nimport {Obstacle, Vec2} from '../utility';\nimport Grid from './Grid';\n\n// type Action = {\n//     type: string;\n// };\n\n// const reducer = (state: Vec2, action: Action) => {\n//     switch (action.type) {\n//     }\n// };\n\nconst Game: React.FC = () => {\n    const initialObstacles: Obstacle[] = [\n        {col: 6, height: 3, side: 'bottom'},\n        {col: 8, height: 4, side: 'top'},\n        {col: 8, height: 2, side: 'bottom'}\n    ];\n    const [position, setPosition] = useState<Vec2>(new Vec2(3, 3));\n    const [obstacles, setObstacles] = useState<Obstacle[]>(initialObstacles);\n    // const [position, dispatch] = useReducer(reducer, new Vec2(3, 3));\n    const moveHandler = (event: KeyboardEvent) => {\n        console.log('position');\n        if (event.key == 'ArrowUp') {\n            setPosition(new Vec2(position.row - 1, position.col));\n        } else if (event.key == 'ArrowDown') {\n            setPosition(new Vec2(position.row + 1, position.col));\n        }\n        console.log('obstacles');\n        if (event.key == 'ArrowUp' || event.key == 'ArrowDown') {\n            setObstacles(\n                obstacles.map((obstacle) => {\n                    obstacle.col -= 1;\n                    return obstacle;\n                })\n            );\n        }\n    };\n    useEffect(() => {\n        document.addEventListener('keydown', moveHandler);\n        return () => document.removeEventListener('keydown', moveHandler);\n    });\n    return <Grid position={position} obstacles={obstacles} />;\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}