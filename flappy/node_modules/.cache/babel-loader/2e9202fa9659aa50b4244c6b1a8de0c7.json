{"ast":null,"code":"var _jsxFileName = \"/Users/mik04rm/Desktop/kody/flappy/src/components/Cell.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// const Wrapper = styled.div<CellProps>`\n//     border: 2px solid red;\n//     color: wheat;\n// `;\nconst Cell = props => {\n  // return <Wrapper fill={props.fill} className={props.className} />;\n  if (props.fill) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: [props.position.row, \", \", props.position.col]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.position.row, \", \", props.position.col]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/mik04rm/Desktop/kody/flappy/src/components/Cell.tsx"],"names":["React","Cell","props","fill","color","position","row","col"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAUA;AACA;AACA;AACA;AAEA,MAAMC,IAAyB,GAAIC,KAAD,IAAW;AACzC;AAEA,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACZ,wBACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA,iBACKF,KAAK,CAACG,QAAN,CAAeC,GADpB,QAC2BJ,KAAK,CAACG,QAAN,CAAeE,GAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMO;AACH,wBACI;AAAA,iBACKL,KAAK,CAACG,QAAN,CAAeC,GADpB,QAC2BJ,KAAK,CAACG,QAAN,CAAeE,GAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CAhBD;;KAAMN,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {Vec2} from '../utility';\n\ntype CellProps = {\n    fill: boolean;\n    position: Vec2;\n    // className?: string;\n};\n\n// const Wrapper = styled.div<CellProps>`\n//     border: 2px solid red;\n//     color: wheat;\n// `;\n\nconst Cell: React.FC<CellProps> = (props) => {\n    // return <Wrapper fill={props.fill} className={props.className} />;\n\n    if (props.fill) {\n        return (\n            <span style={{color: 'red'}}>\n                {props.position.row}, {props.position.col}\n            </span>\n        );\n    } else {\n        return (\n            <span>\n                {props.position.row}, {props.position.col}\n            </span>\n        );\n    }\n};\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}