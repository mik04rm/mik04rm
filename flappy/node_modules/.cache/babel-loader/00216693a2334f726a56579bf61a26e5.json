{"ast":null,"code":"var _jsxFileName = \"/Users/mik04rm/Desktop/kody/flappy/src/components/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport { Vec2 } from '../utility';\nimport Grid from './Grid'; // handleUpArrow = () => {\n//     setPosition(new Vec2(position.row + 1, position.col));\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {}\n};\n\nconst Game = () => {\n  _s();\n\n  //const [position, setPosition] = useState<Vec2>(new Vec2(3, 3));\n  const [position, dispatch] = useReducer(reducer, new Vec2(3, 3)); // const moveHandler = (event: KeyboardEvent) => {\n  //     if (event.key == 'ArrowUp') {\n  //         setPosition(new Vec2(position.row - 1, position.col));\n  //     }\n  //     if (event.key == 'ArrowDown') {\n  //         setPosition(new Vec2(position.row + 1, position.col));\n  //     }\n  // };\n\n  useEffect(() => {\n    document.addEventListener('keydown', moveHandler);\n    return () => document.removeEventListener('keydown', moveHandler);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    position: position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Game, \"SdYnLDvaUEXqMtrycYc7KLAq+AI=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/mik04rm/Desktop/kody/flappy/src/components/Game.tsx"],"names":["React","useEffect","useReducer","Vec2","Grid","reducer","state","action","type","Game","position","dispatch","document","addEventListener","moveHandler","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAAqD,OAArD;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;;;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAcC,MAAd,KAAiC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEH,CAHD;;AAKA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBT,UAAU,CAACG,OAAD,EAAU,IAAIF,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAV,CAAvC,CAFyB,CAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,WAArC;AACA,WAAO,MAAMF,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwCD,WAAxC,CAAb;AACH,GAHQ,CAAT;AAIA,sBAAO,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAhBD;;GAAMD,I;;KAAAA,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\nimport {Vec2} from '../utility';\nimport Grid from './Grid';\n\n// handleUpArrow = () => {\n//     setPosition(new Vec2(position.row + 1, position.col));\n// }\n\ntype Action = {\n    type: string;\n};\n\nconst reducer = (state: Vec2, action: Action) => {\n    switch (action.type) {\n    }\n};\n\nconst Game: React.FC = () => {\n    //const [position, setPosition] = useState<Vec2>(new Vec2(3, 3));\n    const [position, dispatch] = useReducer(reducer, new Vec2(3, 3));\n    // const moveHandler = (event: KeyboardEvent) => {\n    //     if (event.key == 'ArrowUp') {\n    //         setPosition(new Vec2(position.row - 1, position.col));\n    //     }\n    //     if (event.key == 'ArrowDown') {\n    //         setPosition(new Vec2(position.row + 1, position.col));\n    //     }\n    // };\n    useEffect(() => {\n        document.addEventListener('keydown', moveHandler);\n        return () => document.removeEventListener('keydown', moveHandler);\n    });\n    return <Grid position={position} />;\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}